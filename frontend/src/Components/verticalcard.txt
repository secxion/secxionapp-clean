import React from "react";
import { Link } from "react-router-dom";
import { motion } from "framer-motion";
import { FaHeart, FaEye, FaStar } from "react-icons/fa";
import scrollTop from "../helpers/scrollTop";
import "./VerticalCard.css";

const VerticalCard = React.memo(({ loading, data = [] }) => {
  const loadingList = new Array(12).fill(null);

  const truncateText = (text, maxLength) => {
    if (!text) return '';
    return text.length > maxLength ? `${text.substring(0, maxLength)}...` : text;
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.2
      }
    }
  };

  const cardVariants = {
    hidden: { 
      opacity: 0, 
      y: 20,
      scale: 0.95
    },
    visible: { 
      opacity: 1, 
      y: 0,
      scale: 1,
      transition: {
        duration: 0.4,
        ease: "easeOut"
      }
    }
  };

  if (loading) {
    return (
      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-4">
        {loadingList.map((_, index) => (
          <div
            key={index}
            className="group bg-white rounded-2xl shadow-md border border-gray-200 overflow-hidden animate-pulse"
          >
            <div className="aspect-square bg-gradient-to-br from-gray-200 via-gray-300 to-gray-200 bg-size-200 animate-gradient"></div>
            <div className="p-4 space-y-3">
              <div className="space-y-2">
                <div className="h-4 bg-gray-200 rounded-lg w-3/4"></div>
                <div className="h-3 bg-gray-200 rounded-lg w-1/2"></div>
              </div>
              <div className="flex items-center justify-between">
                <div className="h-4 bg-gray-200 rounded-lg w-16"></div>
                <div className="h-8 bg-gray-200 rounded-lg w-8"></div>
              </div>
            </div>
          </div>
        ))}
      </div>
    );
  }

  return (
    <motion.div
      variants={containerVariants}
      initial="hidden"
      animate="visible"
      className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 gap-4"
    >
      {data.map((product, index) => (
        <motion.div
          key={product._id}
          variants={cardVariants}
          whileHover={{ 
            y: -8,
            transition: { duration: 0.3, ease: "easeOut" }
          }}
          className="group"
        >
          <Link
            to={`/product/${product._id}`}
            onClick={scrollTop}
            className="block bg-white rounded-2xl shadow-md border border-gray-200 overflow-hidden transition-all duration-300 hover:shadow-xl hover:border-indigo-200 focus:outline-none focus:ring-4 focus:ring-indigo-100 focus:border-indigo-300"
          >
            {/* Image Container */}
            <div className="relative aspect-square bg-gradient-to-br from-gray-50 to-gray-100 overflow-hidden">
              <img
                src={product.productImage?.[0] || "/api/placeholder/300/300"}
                alt={product.productName}
                className="w-full h-full object-cover transition-all duration-500 group-hover:scale-110"
                loading="lazy"
                onError={(e) => {
                  e.target.src = "/api/placeholder/300/300";
                }}
              />
              
              {/* Overlay Actions */}
              
            
            </div>

            {/* Content */}
            <div className="p-4">
              <div className="space-y-3">
                {/* Product Name */}
                <h3 className="font-semibold text-gray-900 text-sm leading-tight group-hover:text-indigo-600 transition-colors duration-200">
                  {truncateText(product.productName, 50)}
                </h3>

                {/* Category */}
                {product.category && (
                  <span className="inline-block px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded-full font-medium">
                    {product.category}
                  </span>
                )}

                
              </div>
            </div>

            {/* Brand Signature */}
            <div className="absolute bottom-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
              <div className="px-2 py-1 bg-gradient-to-r from-indigo-500 to-purple-500 text-white text-xs font-bold rounded-full shadow-lg">
                SXN
              </div>
            </div>
          </Link>
        </motion.div>
      ))}
    </motion.div>
  );
});

VerticalCard.displayName = 'VerticalCard';

export default VerticalCard;